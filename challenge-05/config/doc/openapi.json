{
  "openapi": "3.0.3",
  "info": {
    "title": "Binar Academy - Chapter 5",
    "description": "This is an API sample that contains a user table and a car table, where these tables are related to each other. in this API we implemented crud where we can create cars, display cars, display car details, update cars and delete cars. We created this API with the aim of collecting assignments for Binar Academy chapter 5, where we were asked to create API documentation. In this case I chose to use Swagger in creating API documentation.",
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "@novalmahardhika",
    "url": "https://github.com/novalmahardhika"
  },
  "servers": [
    {
      "url": "http://localhost:8001/api/v1"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User endpoint"
    },
    {
      "name": "Car",
      "description": "Car endpoint"
    }
  ],
  "paths": {
    "/current-user": {
      "get": {
        "tags": ["User"],
        "summary": "endpoint current user",
        "description": "check current user",
        "security": [
          {
            "bearerAuth": []
          }
        ],

        "responses": {
          "200": {
            "description": "Response Register Admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResCurrentUser"
                }
              }
            }
          },

          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorize"
                }
              }
            }
          },

          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerErr"
                }
              }
            }
          }
        }
      }
    },

    "/admin/register": {
      "post": {
        "tags": ["User"],
        "summary": "endpoint register Admin",
        "description": "create user role Admin",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "create user admin",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterAdmin"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Response Register Admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResUserAdmin"
                }
              }
            }
          },

          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadReq"
                }
              }
            }
          },

          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },

          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerErr"
                }
              }
            }
          }
        }
      }
    },

    "/register": {
      "post": {
        "tags": ["User"],
        "summary": "endpoint register member",
        "description": "create user role member",

        "requestBody": {
          "description": "create user member",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterMember"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "Response Register User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResUserAdmin"
                }
              }
            }
          },

          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadReq"
                }
              }
            }
          },

          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerErr"
                }
              }
            }
          }
        }
      }
    },

    "/login": {
      "post": {
        "tags": ["User"],
        "summary": "endpoint Login",
        "description": "Login user",

        "requestBody": {
          "description": "Login User",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Response Login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResLogin"
                }
              }
            }
          },

          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadReq"
                }
              }
            }
          },

          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorize"
                }
              }
            }
          },

          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },

          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerErr"
                }
              }
            }
          }
        }
      }
    },

    "/cars": {
      "post": {
        "tags": ["Car"],
        "summary": "endpoint create Car ",
        "description": "getting create Car",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Update an existent pet in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCar"
              }
            }
          },
          "required": true
        },

        "responses": {
          "200": {
            "description": "Response Create Car",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResCreateCar"
                }
              }
            }
          },

          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadReq"
                }
              }
            }
          },

          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorize"
                }
              }
            }
          },

          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },

          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerErr"
                }
              }
            }
          }
        }
      },

      "get": {
        "tags": ["Car"],
        "summary": "endpoint Car",
        "description": "get list Car",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get List cars",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCars"
                }
              }
            }
          },

          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorize"
                }
              }
            }
          },

          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerErr"
                }
              }
            }
          }
        }
      }
    },

    "/cars/{carId}": {
      "delete": {
        "tags": ["Car"],
        "summary": "Deleted Car",
        "description": "getting delete car",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "deleteCar",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "The id that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Get deleted car",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResDeletedCar"
                }
              }
            }
          },

          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorize"
                }
              }
            }
          },

          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },

          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },

          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerErr"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Car"],
        "summary": "update Car",
        "description": "getting update car",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "updateCar",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "The id that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],

        "requestBody": {
          "description": "Update an existent pet in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCar"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Get Updated car",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResUpdateCar"
                }
              }
            }
          },

          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadReq"
                }
              }
            }
          },

          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorize"
                }
              }
            }
          },

          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forbidden"
                }
              }
            }
          },

          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },

          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerErr"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Car"],
        "summary": "get car detail",
        "description": "getting car detail",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "operationId": "getCarDetail",
        "parameters": [
          {
            "name": "carId",
            "in": "path",
            "description": "The id that needs to be fetched",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get data detail car",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailCar"
                }
              }
            }
          },

          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },

          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorize"
                }
              }
            }
          },

          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/internalServerErr"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Unauthorize": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "FAIL"
          },
          "message": {
            "type": "string",
            "example": "Unauthorize"
          }
        }
      },

      "NotFound": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "FAIL"
          },
          "message": {
            "type": "string",
            "example": "Data is Not Found"
          }
        }
      },

      "Forbidden": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Forbidden"
          },
          "message": {
            "type": "string",
            "example": "user cannot access"
          }
        }
      },

      "BadReq": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "FAIL"
          },
          "message": {
            "type": "string",
            "example": "Bad Request"
          }
        }
      },

      "internalServerErr": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "FAIL"
          },
          "message": {
            "type": "string",
            "example": "Internal Server Error"
          }
        }
      },

      "Login": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "mamat@super.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "mamat123"
          }
        }
      },

      "ResCurrentUser": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "message": {
            "type": "string",
            "example": "check current Success"
          },
          "data": {
            "$ref": "#/components/schemas/DataUserMember"
          }
        }
      },

      "ResLogin": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "message": {
            "type": "string",
            "example": "Login Success"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/ResDataLogin"
          }
        }
      },

      "ResDataLogin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "c6b57794-932c-4951-b852-645a42968768"
          },
          "username": {
            "type": "string",
            "example": "Mamat"
          },
          "email": {
            "type": "string",
            "example": "mamat@super.com"
          },
          "password": {
            "type": "string",
            "example": "$2b$10$U/czqiaR6sIRwuBwZvffQe19dcjFn38dhviVy/Df5jyr2caE16JBa"
          },
          "phone": {
            "type": "string",
            "example": "082100102009"
          },
          "role": {
            "type": "string",
            "example": "SUPERADMIN"
          },
          "address": {
            "type": "string",
            "example": "Jalan Pepaya 4"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-10-22T11:55:55.509Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-10-22T11:55:55.509Z"
          },
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijg2ODJlZTY3LTNmMzMtNDhhMi1hNzdkLWFlYzA1ZTkwYTVlMCIsImlhdCI6MTY5ODE1MDc5OX0.kJw7Z6Ey9zh0i0z-6UFTZB_v134eghmlk_y0fwke1WM"
          }
        }
      },

      "ResUserMember": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "message": {
            "type": "string",
            "example": "Registered Success"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/DataUserMember"
          }
        }
      },

      "ResUserAdmin": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "message": {
            "type": "string",
            "example": "Registered Success"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/DataUser"
          }
        }
      },

      "RegisterAdmin": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "username": {
            "type": "string",
            "example": "Bob"
          },
          "email": {
            "type": "string",
            "example": "bob@mail.com"
          },
          "password": {
            "type": "string",
            "example": "bob123"
          },
          "phone": {
            "type": "string",
            "example": "089089631221"
          },
          "address": {
            "type": "string",
            "example": "Jalan Bambu Kuning No 80"
          }
        }
      },

      "RegisterMember": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "username": {
            "type": "string",
            "example": "Volkanovski"
          },
          "email": {
            "type": "string",
            "example": "volk30@mail.com"
          },
          "password": {
            "type": "string",
            "example": "volk123"
          },
          "phone": {
            "type": "string",
            "example": "089089631221"
          },
          "address": {
            "type": "string",
            "example": "Jalan Bambu Kuning No 80"
          }
        }
      },

      "DataUserMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "a60fd7fd-e02d-451a-805f-14bd803f16c9"
          },
          "username": {
            "type": "string",
            "example": "Volkanovski"
          },
          "email": {
            "type": "string",
            "example": "volk30@mail.com"
          },
          "password": {
            "type": "string",
            "example": "$2b$10$U/czqiaR6sIRwuBwZvffQe19dcjFn38dhviVy/Df5jyr2caE16JBa"
          },
          "phone": {
            "type": "string",
            "example": "089089631221"
          },
          "role": {
            "type": "string",
            "example": "MEMBER"
          },
          "address": {
            "type": "string",
            "example": "Jalan Bambu Kuning No 80"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-10-22T11:55:55.509Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-10-22T11:55:55.509Z"
          }
        }
      },

      "DataUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "c6b57794-932c-4951-b852-645a42968768"
          },
          "username": {
            "type": "string",
            "example": "Bob"
          },
          "email": {
            "type": "string",
            "example": "bob@mail.com"
          },
          "password": {
            "type": "string",
            "example": "$2b$10$U/czqiaR6sIRwuBwZvffQe19dcjFn38dhviVy/Df5jyr2caE16JBa"
          },
          "phone": {
            "type": "string",
            "example": "089089631221"
          },
          "role": {
            "type": "string",
            "example": "ADMIN"
          },
          "address": {
            "type": "string",
            "example": "Jalan Bambu Kuning No 80"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-10-22T11:55:55.509Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-10-22T11:55:55.509Z"
          }
        }
      },

      "DeleteCar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "998b618b-158c-4378-96cc-854b9e66626e"
          },
          "name": {
            "type": "string",
            "example": "Mclaren"
          },
          "type": {
            "type": "string",
            "example": "small"
          },
          "image": {
            "type": "string",
            "example": "https://unsplash.com/photos/RzgGMz2kU94"
          },
          "capacity": {
            "type": "integer",
            "example": 2
          },
          "rentPerDay": {
            "type": "integer",
            "example": 9000000
          },
          "description": {
            "type": "string",
            "example": "Exotic car from English"
          },
          "availableAt": {
            "type": "string",
            "example": "2023-12-21"
          },
          "createdBy": {
            "type": "string",
            "example": "8682ee67-3f33-48a2-a77d-aec05e90a5e0"
          },
          "updatedBy": {
            "type": "string",
            "example": null
          },
          "deletedBy": {
            "type": ["string", "null"],
            "example": "8682ee67-3f33-48a2-a77d-aec05e90a5e0"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-10-23T15:23:13.962Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-10-23T15:23:13.962Z"
          },
          "deletedAt": {
            "type": "string",
            "example": "2023-10-23T15:23:13.962Z"
          }
        }
      },

      "ResDeletedCar": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "message": {
            "type": "string",
            "example": "deleted car success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeleteCar"
            }
          }
        }
      },

      "UpdateCar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "998b618b-158c-4378-96cc-854b9e66626e"
          },
          "name": {
            "type": "string",
            "example": "Aston Martin"
          },
          "type": {
            "type": "string",
            "example": "small"
          },
          "image": {
            "type": "string",
            "example": "https://unsplash.com/photos/RzgGMz2kU94"
          },
          "capacity": {
            "type": "integer",
            "example": 8
          },
          "rentPerDay": {
            "type": "integer",
            "example": 8500000
          },
          "description": {
            "type": "string",
            "example": "Exotic car from English"
          },
          "availableAt": {
            "type": "string",
            "example": "2023-12-21"
          },
          "createdBy": {
            "type": "string",
            "example": "8682ee67-3f33-48a2-a77d-aec05e90a5e0"
          },
          "updatedBy": {
            "type": "string",
            "example": "8682ee67-3f33-48a2-a77d-aec05e90a5e0"
          },
          "deletedBy": {
            "type": ["string", "null"],
            "example": null
          },
          "createdAt": {
            "type": "string",
            "example": "2023-10-23T15:23:13.962Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-10-23T15:23:13.962Z"
          },
          "deletedAt": {
            "type": ["string", "null"],
            "example": null
          }
        }
      },

      "ResUpdateCar": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "message": {
            "type": "string",
            "example": "updated car success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCar"
            }
          }
        }
      },

      "ResCreateCar": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "message": {
            "type": "string",
            "example": "Created Successfully"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/DataCarCreate"
          }
        }
      },

      "CreateCar": {
        "type": "object",
        "required": [
          "name",
          "type",
          "image",
          "capacity",
          "rentPerDay",
          "description",
          "availableAt"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Mclaren"
          },
          "type": {
            "type": "string",
            "example": "small"
          },
          "image": {
            "type": "string",
            "example": "https://unsplash.com/photos/RzgGMz2kU94"
          },
          "capacity": {
            "type": "integer",
            "example": 2
          },
          "rentPerDay": {
            "type": "integer",
            "example": 8500000
          },
          "description": {
            "type": "string",
            "example": "Exotic car from English"
          },
          "availableAt": {
            "type": "string",
            "example": "2023-12-21"
          }
        }
      },

      "DataCarCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "998b618b-158c-4378-96cc-854b9e66626e"
          },
          "name": {
            "type": "string",
            "example": "Mclaren"
          },
          "type": {
            "type": "string",
            "example": "small"
          },
          "image": {
            "type": "string",
            "example": "https://unsplash.com/photos/RzgGMz2kU94"
          },
          "capacity": {
            "type": "integer",
            "example": 2
          },
          "rentPerDay": {
            "type": "integer",
            "example": 8500000
          },
          "description": {
            "type": "string",
            "example": "Exotic car from English"
          },
          "availableAt": {
            "type": "string",
            "example": "2023-12-21"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-10-22T13:44:22.634Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-10-22T13:44:22.634Z"
          },
          "deletedAt": {
            "type": "string",
            "example": null
          },
          "createdCarBy": {
            "type": "object",
            "example": null
          },
          "updatedCarBy": {
            "type": "object",
            "example": null
          },
          "deletedCarBy": {
            "type": "object",
            "example": null
          }
        }
      },

      "DataCarDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "998b618b-158c-4378-96cc-854b9e66626e"
          },
          "name": {
            "type": "string",
            "example": "Mclaren"
          },
          "type": {
            "type": "string",
            "example": "small"
          },
          "image": {
            "type": "string",
            "example": "https://unsplash.com/photos/RzgGMz2kU94"
          },
          "capacity": {
            "type": "integer",
            "example": 2
          },
          "rentPerDay": {
            "type": "integer",
            "example": 8500000
          },
          "description": {
            "type": "string",
            "example": "Exotic car from English"
          },
          "availableAt": {
            "type": "string",
            "example": "2023-12-21"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-10-22T13:44:22.634Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-10-22T13:44:22.634Z"
          },
          "deletedAt": {
            "type": "string",
            "example": null
          },
          "createdCarBy": {
            "type": "object",
            "$ref": "#/components/schemas/DataUser"
          },
          "updatedCarBy": {
            "type": "object",
            "$ref": "#/components/schemas/DataUser"
          },
          "deletedCarBy": {
            "type": "object",
            "$ref": "#/components/schemas/DataUser"
          }
        }
      },

      "DetailCar": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "message": {
            "type": "string",
            "example": "get car success"
          },
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/DataCarDetail"
          }
        }
      },

      "ListCars": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "message": {
            "type": "string",
            "example": "get list cars success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dataCar"
            }
          }
        }
      },

      "dataCar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "207716df-7cbe-41f0-8321-7ed021b7c148"
          },
          "name": {
            "type": "string",
            "example": "Mclaren"
          },
          "type": {
            "type": "string",
            "example": "small"
          },
          "capacity": {
            "type": "integer",
            "example": 2
          },
          "renPerDay": {
            "type": "integer",
            "example": 9000000
          },
          "description": {
            "type": "string",
            "example": "best Car in the world"
          },
          "availableAt": {
            "type": "string",
            "example": "2023-11-23"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-10-21T11:33:17.112Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-10-21T11:33:17.112Z"
          }
        }
      }
    },

    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
